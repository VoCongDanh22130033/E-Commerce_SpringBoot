=========================================@RestController=======================================
✅ @RestController
Đánh dấu class Java đó là một RESTful Web Controller.

Tự động kết hợp:

@Controller
@ResponseBody
→ Nghĩa là tất cả các phương thức trong class sẽ trả về dữ liệu JSON (hoặc text), không phải HTML view.

Dùng khi bạn muốn API trả kết quả về cho client (vd: Angular, React, mobile app)

=========================================@RequestMapping("/auth")=========================================
Định nghĩa đường dẫn gốc (base URL) cho tất cả các API trong controller này.

Ví dụ:

@RestController
@RequestMapping("/auth")
public class AuthController {

    @PostMapping("/login")
    public String login(@RequestBody LoginRequest req) {
        return "Xử lý đăng nhập";
    }

    @PostMapping("/register")
    public String register(@RequestBody RegisterRequest req) {
        return "Xử lý đăng ký";
    }
}
→ Khi đó bạn có thể gọi API như sau:

POST /auth/login

POST /auth/register
=================================================A'nh Xa ======================================
Thằng nào giữ khóa ngoại @ManyToOne và @JoinColumn
=================================================Cách Đặt tên==========================================
select: find
where: By
and:And
==================================================Optional=========================================
Tóm tắt
Tình huống	Có nên dùng Optional?
Trả về từ method (giá trị có thể null)	✅ Nên dùng
Tham số truyền vào method	✅ Có thể dùng, nhưng cân nhắc
Field trong class/entity	❌ Không nên
Collection chứa Optional	❌ Không nên
========================================pack payload======================================================
----request nơi tạo class để bắt front end dựng lên
----response nơi tạo class format trả ra front end